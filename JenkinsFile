pipeline {
    agent any

    tools {
        terraform 'terraform'
        maven 'maven'
    }

    stages {
        // stage('Clone Repository'){
        //     steps{
        //        sh git clone https://github.com/sanketsultan/open-office.git
        //        sh git checkout master
        //     }
        // }
        stage('Checkout') {
                    steps {
                        checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/sanketsultan/open-office.git']]])
                    }
        }

        stage('SonarQube analysis') {
            environment {
                SCANNER_HOME = tool 'Sonar'
            }
            steps {
                withSonarQubeEnv(credentialsId: 'd789c80c-a358-4e6d-b56c-fdada33ca1e6', installationName: 'SonarQube') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner \
                -Dsonar.projectBaseDir=open-office
                -Dsonar.projectKey=open-office \
                -Dsonar.sources=. '''
                }
            }
        }
    // stage('SQuality Gate') {
    //     steps {
    //     timeout(time: 1, unit: 'MINUTES') {
    //     waitForQualityGate abortPipeline: true
    //     }
    // }
    // }
    // stage('Build') {
    //     steps {
    //         sh 'python3 -m py_compile app.py'
    //         stash(name: 'compiled-results', includes: 'sources/*.py*')
    //     }
    // }
    // stage('Terraform Init') {
    //     steps {
    //         sh label: '', script: 'terraform init'
    //     }
    // }
    // stage('Terraform Plan') {
    //     steps {
    //         sh label: '', script: 'terraform plan'
    //     }
    // }
    // stage('Terraform Apply') {
    //     steps {
    //         echo 'Terraform action from the parameter is --->destroy'
    //         sh label: '', script: 'terraform destroy --auto-approve'
    //         echo 'Terraform action from the parameter is --->apply'
    //         sh label: '', script: 'terraform apply --auto-approve'
    //     }
    // }
    }
}
