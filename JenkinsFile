pipeline {
    agent any
    
     tools {
        terraform 'terraform'
        maven 'maven'
    }
    
    stages {
        // stage('Clone Repository'){
        //     steps{
        //        sh git clone https://github.com/sanketsultan/open-office.git
        //        sh git checkout master
        //     }
        // }
        stage('Checkout') {
                    steps {
                        checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/sanketsultan/open-office.git']]])
                    }
                }
    //     stage('Build Project') {
    //         // def mvnHome = tool name: '3.8.6', type: 'maven'
    //         // withSonarQubeEnv('SonarQube'){
    //         // sh '''${mvnHome}/bin/mvn package'''
    //         // steps{
    //         // sh '''mvn -B -DskipTests clean package'''
    //         // }
    //    // }
    //     }
        stage('SonarQube analysis') {
            environment {
            SCANNER_HOME = tool 'Sonar'
            }
            steps {
            withSonarQubeEnv(credentialsId: '38707341-cef0-48ba-aa98-58845cb06bbf', installationName: 'SonarQube') {
                sh '''$SCANNER_HOME/bin/sonar\
                -Dsonar.projectKey=projectKey \
                -Dsonar.projectName=projectName \
                -Dsonar.sources=src/ \
                -Dsonar.java.binaries=target/classes/ \
                -Dsonar.exclusions=src/test/java/****/*.java \
                -Dsonar.java.libraries=/var/lib/jenkins/.m2/**/*.jar \
                -Dsonar.projectVersion=${BUILD_NUMBER}-${GIT_COMMIT_SHORT}'''
            }
            }
        }
        stage('SQuality Gate') {
            steps {
            timeout(time: 1, unit: 'MINUTES') {
            waitForQualityGate abortPipeline: true
            }
        }
        }
        stage('Terraform Init'){
            steps{
                sh label: '',script: 'terraform init'
            }
        }
        stage('Terraform Plan'){
            steps{
                sh label: '',script: 'terraform plan'
            }
        }
        stage('Terraform apply'){
            steps{
                echo "Terraform action from the parameter is --->${action}"
                sh label: '',script: 'terraform ${action} --auto-approve'
            }
        }
    
}
}
//sa